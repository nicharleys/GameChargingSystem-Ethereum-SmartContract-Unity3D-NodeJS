pragma solidity ^0.4.24;
contract ERC20_interface {

    uint256 public totalSupply;
    function balanceOf(address _owner) public view returns (uint256 balance);
    function transfer(address _to, uint256 _value) public returns (bool success);
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);
    function approve(address _spender, uint256 _value) public returns (bool success);
    function allowance(address _owner, address _spender) public view returns (uint256 remaining);
    
    function putExchange(address _to, uint256 _balances, uint256 _item1, uint256 _item2) public returns (bool success);
    function lookExchange(address _from, address _to) public view returns (uint256 _balances, uint256 _item1, uint256 _item2, uint _status);
    function exchangeStatus(address _to) public returns (bool success);
    function cancelExchange(address _to) public returns (bool success);
    function exchangeItem(address _to) public returns (bool success);
    
    function enter(uint256 _value) public returns (bool success);
    function refund() public returns (bool success);
    function lookMoney() public view returns (uint256 balance);
    
    event Transfer(address indexed _from, address indexed _to, uint256 _value);
    event Approval(address indexed _owner, address indexed _spender, uint256 _value);
    event Exchange(address indexed _fromAddress, address indexed _toAddress, uint256 _balancesValue, uint256 _item1Value, uint256 _item2Value, string _status);
}